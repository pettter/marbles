Transducers: type < tree -> tree >
TD-transducer
BU-transducer
MTT (OI/IO) (maybe a BU variant as well, just because..)
Attributed TT (Also BU?)
Macro Attributed TT
Restrictions on above: deterministic/total/

Different kinds of rewrite systems

Automata/language: type < tree -> bool/semifield >
FTA (BU/TD/Other kinds?)
modifiers: Deterministic/nondeterministic, total,
	weighted/probabilistic/other restrictions

Grammar/language: type < () -> treeset/iterator<tree>e >
RTG
CFTG
Again, rewrite systems of some sort, e.g. L-systems


Is there a 'canonical form' for an RTL? Is it an automaton or a grammar?
Neither?


Proposed hierarchy

modules:
	basetypes (containing simple types, such as trees, semirings, etc.)
	automata (containing automata on simple types, transducers, generators etc.)
	algorithms (containing algorithms on automata and/or simple types etc.)
	gui (the gui related classes)
	
	

